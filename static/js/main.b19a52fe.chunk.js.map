{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","window","Android","CustomFileWidget","schema","id","formContext","disabled","useState","files","setFiles","useEffect","console","log","JSON","stringify","hasOwnProperty","filesData","parsed","parse","newFiles","Object","keys","map","filename","fileName","downloadUri","url","storagePath","progress","length","filesObj","forEach","file","onChange","className","title","Button","onClick","pickPhotos","style","backgroundColor","marginRight","size","pickVideos","i","paddingTop","filePath","deleteFile","cancelWork","removeFile","parseInt","previewFile","App","setSchema","uiSchema","setUiSchema","data","setData","fileData","setFileData","isComplete","setIsComplete","widgets","customfile","addEventListener","e","detail","stageData","jsonSchema","listenersReady","removeEventListener","padding","schemaJson","schemaUi","formData","v","onSubmit","stringData","onFormSubmit","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b19a52fe.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Typography, IconButton} from \"@material-ui/core\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\n\r\ntype fileParams = { fileName: string, progress: number, downloadUri?: string, storagePath?: string }\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, id, formContext, disabled, value} = props;\r\n    const [files, setFiles] = useState<fileParams[] | undefined>([])\r\n    const [storage, setStorage] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            console.log(\"formContext\", JSON.stringify(formContext))\r\n            if (formContext.hasOwnProperty(id)) {\r\n                console.log(\"SAME ID\")\r\n                let filesData = formContext[id]\r\n                console.log(\"filesData\", JSON.stringify(filesData))\r\n                setFiles(filesData)            \r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        console.log(\"value\", value)\r\n        if (value) {\r\n            let parsed = JSON.parse(value)\r\n            let newFiles = Object.keys(parsed).map(filename => {\r\n                return {fileName: filename, downloadUri: parsed[filename].url, storagePath: parsed[filename].storagePath, progress: 100}\r\n            })\r\n            setFiles(newFiles)\r\n        }\r\n    }, [value])\r\n\r\n\r\n    // Return value to Form\r\n    useEffect(() => {\r\n        if (files && files?.length > 0) {\r\n            let filesObj: any = {}\r\n            files.forEach(file => {\r\n                if (file.downloadUri) {\r\n                    filesObj[file.fileName] = {url: file.downloadUri, storagePath: file.storagePath}\r\n                }\r\n                else {\r\n                    filesObj[file.fileName] = {url: \"\", storagePath: \"\"}\r\n                }\r\n            })\r\n            let stringify = JSON.stringify(filesObj)\r\n            props.onChange(stringify)\r\n        }\r\n    }, [files])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickVideos(id);\r\n            // window.Android.pickFile(id);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(id);\r\n        }\r\n    };\r\n\r\n    const removeFile = (fileName: string, storagePath: string, progress: number) => {\r\n        // TODO: If file is loading, stops loading. If file is already loaded, removes file\r\n        if (\"Android\" in window) {\r\n            const filePath = storagePath + fileName\r\n            if (progress === 100) {\r\n                console.log(\"Delete File\", fileName, storagePath)\r\n                window.Android.deleteFile(filePath)\r\n            }\r\n            else {\r\n                console.log(\"Cancel File\", fileName, storagePath)\r\n                window.Android.cancelWork(fileName)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (url: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", url)\r\n            window.Android.previewFile(url)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <Button\r\n                disabled={disabled}\r\n                onClick={handlePhotoClick}\r\n                style={{backgroundColor: \"#1EB980\", marginRight: 5}}\r\n                size=\"sm\"\r\n            >\r\n                Photo\r\n            </Button>\r\n            <Button\r\n                disabled={disabled}\r\n                onClick={handleVideoClick}\r\n                style={{backgroundColor: \"#1EB980\"}}\r\n                size=\"sm\"\r\n            >\r\n                Video\r\n            </Button>\r\n\r\n\r\n            {files && files.map((file: any, i: number) => file && (\r\n                <div key={`${file.fileName}_${i}`} style={{paddingTop: 10}}>\r\n                    <div style={{display: 'flex', alignItems: \"center\"}}>\r\n                        <Typography>{file.fileName}</Typography>\r\n                        {file.progress == 100 && <Button onClick={() => removeFile(file.fileName, file.storagePath, file.progress)}>Remove</Button>}\r\n                        {parseInt(file.progress) < 100 && <Button onClick={() => cancelWork(file.fileName)}>Clear</Button>}\r\n                        {file.progress == 100 && <Button onClick={() => previewFile(file.downloadUri)}>Preview</Button>}\r\n                        {/* {file.progress == 100 && <a className=\"text-success\" href={file.downloadUri} style={{paddingLeft: 10}}>File Saved</a>} */}\r\n                    </div>\r\n                    {parseInt(file.progress) < 100 && <LinearProgressWithLabel value={parseInt(file.progress) ?? 0}/>}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import React, {useEffect, useState} from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport schemaJson from './schema.json'\r\nimport schemaUi from './ui.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\n// const evt = new Event('android_event', {'bubbles':true, 'cancelable':false});\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [isComplete, setIsComplete] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n                console.log(JSON.stringify(e.detail))\r\n                const stageData = JSON.parse(e.detail)\r\n                setSchema(stageData.jsonSchema)\r\n                setUiSchema(stageData.uiSchema)\r\n                setIsComplete(stageData.isComplete)\r\n            }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n                console.log(\"JS FORMDATA\", JSON.stringify(e.detail))\r\n                setData(JSON.parse(e.detail))\r\n            }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n                console.log(\"FILEDATA\", JSON.stringify(e.detail))\r\n                setFileData(JSON.parse(e.detail))\r\n            }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (v) => {\r\n        setData(v.formData)\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: 4}}>\r\n            <Form schema={schema as any ?? schemaJson}\r\n                  uiSchema={uiSchema ?? schemaUi}\r\n                  formData={data}\r\n                  widgets={widgets}\r\n                  disabled={isComplete}\r\n                  formContext={fileData}\r\n                  onChange={handleChange}\r\n                  onSubmit={handleSubmit}\r\n            >\r\n                <Button type={\"submit\"} style={{backgroundColor: \"#1EB980\"}} disabled={isComplete}>Submit</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}