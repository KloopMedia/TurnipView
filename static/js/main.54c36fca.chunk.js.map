{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/CustomButton.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/text-editor/TextViewer.tsx","components/custom-widgets/autocomplete/AutoCompleteWidget.tsx","components/custom-widgets/fixed-radio-widget/FixedRadioWidget.tsx","components/custom-widgets/link-widget/CustomLinkWidget.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomButton","styled","Button","theme","palette","getContrastText","green","backgroundColor","window","Android","CustomFileWidget","schema","uiSchema","id","formContext","disabled","onChange","privateUpload","private","parsedId","replace","useState","files","setFiles","parsedValue","setParsedValue","useEffect","hasOwnProperty","filesData","prevState","uploaded","Object","keys","forEach","filename","isFinished","storagePath","length","parsed","JSON","parse","allFiles","stringify","console","log","f","path","removeFile","a","deleteFile","newFiles","_onBlur","onBlur","_onFocus","onFocus","ControlButtons","name","size","onClick","previewFile","fileName","cancelWork","className","title","Stack","spacing","direction","pickPhotos","pickVideos","map","i","progress","parseInt","workTag","style","paddingTop","noWrap","TextViewer","data","inline","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","AutoCompleteWidget","placeholder","required","readonly","label","autofocus","options","rawErrors","searchField","responseField","params","examples","setExamples","updateExamples","webhook","url","axios","get","then","res","results","catch","err","inputType","type","Form","Group","Label","Control","autoFocus","readOnly","list","target","emptyValue","example","index","RadioWidget","enumOptions","enumDisabled","_onChange","Boolean","option","itemDisabled","Array","isArray","indexOf","checked","Check","CustomLinkWidget","href","App","setSchema","setUiSchema","setData","fileData","setFileData","previousTasks","setPreviousTasks","richText","setRichText","isComplete","setIsComplete","allowChange","setAllowChange","allowGoBack","setAllowGoBack","widgets","customfile","autocomplete","FixedRadioWidget","customlink","addEventListener","e","stageData","detail","jsonSchema","canGoBack","rich_text","listenersReady","removeEventListener","paddingBottom","task","parsedJson","parsedUi","parsedResponses","responses","formData","v","stringData","onSubmit","onFormSubmit","margin","onGoToPrevious","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54c36fca.chunk.js","sourcesContent":["import LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import { styled } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { green } from '@mui/material/colors';\r\n\r\nconst CustomButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(green[300]),\r\n    backgroundColor: green[300],\r\n    '&:hover': {\r\n      backgroundColor: green[400],\r\n    }\r\n  }));\r\n\r\n\r\nexport default CustomButton","import React, {useEffect, useState} from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport {Typography, Button, Stack} from \"@mui/material\";\r\nimport CustomButton from '../../CustomButton'\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, id, formContext, disabled, onChange, value} = props;\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n    const parsedId = id.replace('root_', '');\r\n    const [files, setFiles] = useState<any>({})\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            if (formContext.hasOwnProperty(parsedId)) {\r\n                const filesData = formContext[parsedId]\r\n\r\n                setFiles((prevState: any) => ({...prevState,...filesData}))\r\n\r\n                const uploaded: any = {}\r\n                Object.keys(filesData).forEach(filename => {\r\n                    if (filesData[filename].isFinished) {\r\n                        uploaded[filename] = filesData[filename].storagePath\r\n                    }\r\n                })\r\n                if (Object.keys(uploaded).length > 0) {\r\n                    const parsed = value && typeof value === \"string\" ? JSON.parse(value) : {}\r\n                    const allFiles = JSON.stringify({...parsed, ...uploaded})\r\n                    props.onChange(allFiles)\r\n                }\r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            console.log(\"value useEffect\", value)\r\n            const parsed: any = value && typeof value === \"string\" ? JSON.parse(value) : {}\r\n            setParsedValue(parsed)\r\n            let f:any = {}\r\n            Object.keys(parsed).forEach(filename => {\r\n                const path = parsed[filename]\r\n                f[filename] = {storagePath: path, isFinished: true}\r\n            })\r\n            setFiles(f)\r\n        }\r\n    }, [value])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickVideos(parsedId, privateUpload);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(parsedId, privateUpload);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (filename: string) => {\r\n        if (\"Android\" in window) {\r\n            window.Android.deleteFile(parsedId, filename);\r\n        }\r\n\r\n        const parsed = parsedValue\r\n        const newFiles = {...files}\r\n\r\n        if (filename in newFiles) {\r\n            delete newFiles[filename]\r\n            setFiles(newFiles)\r\n        }\r\n\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            setParsedValue(parsed)\r\n            await props.onChange(JSON.stringify(parsed))\r\n            _onBlur()\r\n        }\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", storagePath)\r\n            window.Android.previewFile(storagePath)\r\n        }\r\n    }\r\n\r\n    const _onBlur = () => props.onBlur(id, \"\");\r\n    const _onFocus = () => props.onFocus(id, \"\");\r\n\r\n    const ControlButtons = (props: { isFinished: boolean, name: string, path: string }) => {\r\n        const {isFinished, name, path} = props;\r\n\r\n        if (isFinished) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"text\" size=\"small\"\r\n                            onClick={() => removeFile(name)}\r\n                            onBlur={_onBlur}\r\n                            onFocus={_onFocus}>Удалить</Button>\r\n                    <Button variant=\"text\" size=\"small\"\r\n                            onClick={() => previewFile(path)}\r\n                            onBlur={_onBlur}\r\n                            onFocus={_onFocus}>Посмотреть файл</Button>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <Button variant=\"text\" size=\"small\"\r\n                        onClick={() => cancelWork(name)}\r\n                        onBlur={_onBlur}\r\n                        onFocus={_onFocus}>Отменить загрузку</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <Stack spacing={1} direction=\"row\">\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handlePhotoClick}\r\n                    size=\"small\"\r\n                    onBlur={_onBlur}\r\n                    onFocus={_onFocus}\r\n                >\r\n                    Фото\r\n                </CustomButton>\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handleVideoClick}\r\n                    size=\"small\"\r\n                    onBlur={_onBlur}\r\n                    onFocus={_onFocus}\r\n                >\r\n                    Видео\r\n                </CustomButton>\r\n            </Stack>\r\n\r\n\r\n            {Object.keys(files).map((filename: any, i: number) => {\r\n                const progress = typeof files[filename].progress === \"string\" ? parseInt(files[filename].progress) : files[filename].progress;\r\n                const path = files[filename].storagePath\r\n                const isFinished = files[filename].isFinished\r\n                const workTag : \"TAG_COMPRESS\" | \"TAG_UPLOAD\" = files[filename].workTag ?? \"TAG_UPLOAD\"\r\n\r\n                return (\r\n                    <div key={`${filename}_${i}`} style={{paddingTop: 10}}>\r\n                        <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                            <Typography noWrap>{filename}</Typography>\r\n                            <ControlButtons name={filename} path={path} isFinished={isFinished}/>\r\n                        </Stack>\r\n                        {!isFinished && <div>\r\n                            <Typography>{workTag === \"TAG_COMPRESS\" ? \"Сжатие файла\" : \"Загрузка файла\"}</Typography>\r\n                            <LinearProgressWithLabel value={progress ?? 0}/>\r\n                        </div>}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {WidgetProps} from \"@rjsf/core\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoCompleteWidget = (props: WidgetProps) => {\r\n    const {\r\n        id,\r\n        placeholder,\r\n        required,\r\n        readonly,\r\n        disabled,\r\n        label,\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        onFocus,\r\n        autofocus,\r\n        options,\r\n        schema,\r\n        rawErrors = []\r\n    } = props;\r\n\r\n    const searchField = options.searchField ?? 'search'\r\n    const responseField = options.responseField ?? 'text'\r\n    const params = options?.params ?? ''\r\n\r\n    const [examples, setExamples] = useState<string[]>([])\r\n\r\n    const updateExamples = () => {\r\n        if (options.webhook) {\r\n            const url = `${options.webhook}?${searchField}=${value + params}`\r\n            axios.get(url).then(res => res.data).then(res => setExamples(res.results)).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const _onChange = ({\r\n                           target: {value},\r\n                       }: React.ChangeEvent<HTMLInputElement>) => {\r\n        updateExamples()\r\n        return onChange(value === \"\" ? options.emptyValue : value)\r\n    };\r\n    const _onBlur = ({target: {value}}: React.FocusEvent<HTMLInputElement>) =>\r\n        onBlur(id, value);\r\n    const _onFocus = ({\r\n                          target: {value},\r\n                      }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n    const inputType = (schema.type) === 'string' ? 'text' : `${schema.type}`\r\n\r\n    return (\r\n        <Form.Group className=\"mb-0\">\r\n            <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                {label || schema.title}\r\n                {(label || schema.title) && required ? \"*\" : null}\r\n            </Form.Label>\r\n            <Form.Control\r\n                id={id}\r\n                placeholder={placeholder}\r\n                autoFocus={autofocus}\r\n                required={required}\r\n                disabled={disabled}\r\n                readOnly={readonly}\r\n                className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n                list={`examples_${id}`}\r\n                type={inputType}\r\n                value={value || value === 0 ? value : \"\"}\r\n                onChange={_onChange}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n            />\r\n            {examples && examples.length > 0 ? (\r\n                <datalist id={`examples_${id}`}>\r\n                    {(examples as string[])\r\n                        .map((example: any, index) => {\r\n                            return <option key={`${example[responseField as string]}_${index}`} value={example[responseField as string]}/>;\r\n                        })}\r\n                </datalist>\r\n            ) : null}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst RadioWidget = ({\r\n  id,\r\n  schema,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  label,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className=\"d-block\">\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      {(enumOptions as any).map((option: any, i: number) => {\r\n        const itemDisabled =\r\n          Array.isArray(enumDisabled) &&\r\n          enumDisabled.indexOf(option.value) !== -1;\r\n        const checked = option.value == value;\r\n\r\n        const radio = (\r\n          <Form.Check\r\n            inline={inline}\r\n            label={option.label}\r\n            id={`${id}_${option.label}`}\r\n            key={i}\r\n            name={id}\r\n            type=\"radio\"\r\n            disabled={disabled || itemDisabled || readonly}\r\n            checked={checked}\r\n            required={required}\r\n            value={option.value}\r\n            onChange={_onChange}\r\n            onBlur={_onBlur}\r\n            onFocus={_onFocus}\r\n          />\r\n        );\r\n        return radio;\r\n      })}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RadioWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport {WidgetProps} from \"@rjsf/core\";\r\n\r\nconst CustomLinkWidget = ({required, label, value, schema, rawErrors = []}: WidgetProps) => {\r\n    return (\r\n        value ? <Form.Group className=\"mb-0\">\r\n                <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                    {label || schema.title}\r\n                    {(label || schema.title) && required ? \"*\" : null}\r\n                </Form.Label>\r\n                <br/>\r\n                <a href={value}>{value}</a>\r\n            </Form.Group>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default CustomLinkWidget;","import React, {useEffect, useState} from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomButton from './components/CustomButton'\r\nimport TextViewer from './components/text-editor/TextViewer';\r\nimport AutoCompleteWidget from \"./components/custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"./components/custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\nimport CustomLinkWidget from \"./components/custom-widgets/link-widget/CustomLinkWidget\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [previousTasks, setPreviousTasks] = useState<any>([])\r\n    const [richText, setRichText] = useState(\"\")\r\n    const [isComplete, setIsComplete] = useState(false)\r\n    const [allowChange, setAllowChange] = useState(false)\r\n    const [allowGoBack, setAllowGoBack] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget,\r\n        customlink: CustomLinkWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n                const stageData = e.detail\r\n                setSchema(stageData.jsonSchema)\r\n                setUiSchema(stageData.uiSchema)\r\n                setIsComplete(stageData.isComplete)\r\n                setAllowGoBack(stageData.canGoBack)\r\n                setAllowChange(true)\r\n            }\r\n        )\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n                console.log(\"JS FORMDATA\", JSON.stringify(e.detail))\r\n                setData(e.detail)\r\n            }\r\n        )\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n                console.log(\"FILEDATA\", e.detail)\r\n                setFileData(e.detail)\r\n            }\r\n        )\r\n        window.addEventListener('android_rich_text_event', (e: any) => {\r\n                console.log(\"RICH TEXT\", JSON.stringify(e.detail))\r\n                setRichText(e.detail.rich_text)\r\n            }\r\n        )\r\n        window.addEventListener('android_previous_tasks_event', (e: any) => {\r\n                console.log(\"PREVIOUS TASKS\", JSON.stringify(e.detail))\r\n                setPreviousTasks(e.detail)\r\n            }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_rich_text_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_previous_tasks_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (e, v) => {\r\n        if (allowChange) {\r\n            setData(e.formData)\r\n            const stringData = JSON.stringify(e.formData)\r\n            console.log(\"ON CHANGE\", stringData)\r\n            window.Android.onChange(stringData);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        const stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    const handleOpenPrevious = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.onGoToPrevious();\r\n        }\r\n    }\r\n\r\n    const renderPreviousTasks = () => {\r\n        return previousTasks.map((task: { jsonSchema: string, uiSchema: string, responses: any }, i: number) => {\r\n            const parsedJson = task.jsonSchema\r\n            const parsedUi = task.uiSchema\r\n            const parsedResponses = task.responses\r\n\r\n            return (\r\n                <Form key={i}\r\n                      schema={parsedJson as any}\r\n                      uiSchema={parsedUi as any}\r\n                      formData={parsedResponses}\r\n                      widgets={widgets}\r\n                      disabled={true}\r\n                > </Form>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderTextViewer = () => {\r\n        if (richText) {\r\n            return <TextViewer data={richText}/>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: \"8px\", paddingBottom: \"16px\"}}>\r\n            {renderTextViewer()}\r\n            {renderPreviousTasks()}\r\n            <Form schema={schema as any}\r\n                  uiSchema={uiSchema}\r\n                  formData={data}\r\n                  widgets={widgets}\r\n                  disabled={isComplete}\r\n                  formContext={fileData}\r\n                  onChange={handleChange}\r\n                  onSubmit={handleSubmit}\r\n            >\r\n                <Box display={\"flex\"}>\r\n                    <CustomButton type={\"submit\"} disabled={isComplete}>Отправить</CustomButton>\r\n                    {allowGoBack &&\r\n                    <CustomButton style={{margin: \"0 8px\"}} disabled={isComplete} onClick={handleOpenPrevious}>К\r\n                        предыдущему таску</CustomButton>}\r\n                </Box>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}