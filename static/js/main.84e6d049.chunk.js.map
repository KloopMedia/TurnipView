{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/CustomButton.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/text-editor/TextViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomButton","styled","Button","theme","palette","getContrastText","green","backgroundColor","window","Android","CustomFileWidget","schema","uiSchema","id","formContext","disabled","onChange","privateUpload","private","parsedId","replace","useState","files","setFiles","loadingFiles","setLoadingFiles","parsedValue","setParsedValue","console","log","JSON","stringify","useEffect","hasOwnProperty","filesData","uploaded","Object","keys","forEach","filename","isFinished","storagePath","length","allFiles","path","prevState","removeFile","a","parsed","newFiles","loadedFiles","_onBlur","onBlur","_onFocus","onFocus","ControlButtons","name","size","onClick","previewFile","fileName","cancelWork","className","title","Stack","spacing","direction","pickPhotos","pickVideos","map","i","progress","parseInt","style","paddingTop","noWrap","TextViewer","data","toolbar","inline","tinymceScriptSrc","process","init","plugins","menubar","image_advtab","importcss_append","App","setSchema","setUiSchema","setData","fileData","setFileData","previousTasks","setPreviousTasks","richText","setRichText","isComplete","setIsComplete","allowChange","setAllowChange","widgets","customfile","addEventListener","e","detail","stageData","parse","jsonSchema","d","listenersReady","removeEventListener","padding","task","parsedJson","parsedUi","parsedResponses","responses","formData","v","stringData","onSubmit","onFormSubmit","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e6d049.chunk.js","sourcesContent":["import LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import { styled } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { green } from '@mui/material/colors';\r\n\r\nconst CustomButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(green[300]),\r\n    backgroundColor: green[300],\r\n    '&:hover': {\r\n      backgroundColor: green[400],\r\n    }\r\n  }));\r\n\r\n\r\nexport default CustomButton","import React, {useEffect, useState} from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport {Typography, Button, Stack} from \"@mui/material\";\r\nimport CustomButton from '../../CustomButton'\r\n\r\n\r\ntype fileParams = { fileName: string, progress: number, downloadUri?: string, storagePath?: string }\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, id, formContext, disabled, onChange, value} = props;\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n    const parsedId = id.replace('root_', '');\r\n    const [files, setFiles] = useState<any>({})\r\n    const [loadingFiles, setLoadingFiles] = useState<any>({})\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    console.log(\"FORM PROPS\", JSON.stringify(props))\r\n    console.log(\"VALUE\", JSON.stringify(value))\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            console.log(\"formContext\", JSON.stringify(formContext))\r\n            if (formContext.hasOwnProperty(parsedId)) {\r\n                let filesData = formContext[parsedId]\r\n                console.log(\"filesData\", JSON.stringify(filesData))\r\n\r\n                setFiles(filesData)\r\n                // setLoadingFiles(filesData)\r\n                const uploaded: any = {}\r\n                Object.keys(filesData).forEach(filename => {\r\n                    if (filesData[filename].isFinished) {\r\n                        uploaded[filename] = filesData[filename].storagePath\r\n                    }\r\n                })\r\n                if (Object.keys(uploaded).length > 0) {\r\n                    const allFiles = {...value, ...uploaded}\r\n                    console.log(\"UPLOADED FILES\", JSON.stringify(allFiles))\r\n                    props.onChange(allFiles)\r\n                }\r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            console.log(\"value useEffect\", value)\r\n            setParsedValue(value)\r\n            Object.keys(value).forEach(filename => {\r\n                const path = value[filename]\r\n                setFiles((prevState: any) => ({\r\n                    ...prevState,\r\n                    [filename]: {storagePath: path, isFinished: true}\r\n                }))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n\r\n    // Return value to Form\r\n    // useEffect(() => {\r\n    //     if (Object.keys(loadingFiles).length > 0) {\r\n    //         console.log(\"Loading Files: \", loadingFiles)\r\n    //         const finishedUpload: any = {}\r\n    //         Object.keys(loadingFiles).forEach(filename => {\r\n    //             if (loadingFiles[filename].isFinished && loadingFiles[filename].workTag === \"TAG_UPLOAD\") {\r\n    //                 finishedUpload[filename] = loadingFiles[filename].storagePath\r\n    //             }\r\n    //         })\r\n    //         const allFiles = {...value, ...finishedUpload};\r\n    //         const stringify = JSON.stringify(allFiles)\r\n    //         console.log(\"VALUE STRING\", stringify)\r\n    //         onChange(allFiles)\r\n    //     }\r\n    // }, [loadingFiles])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"PARSED ID\", parsedId)\r\n            window.Android.pickVideos(parsedId, privateUpload);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(parsedId, privateUpload);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (filename: string, storagePath: string) => {\r\n        // if (\"Android\" in window) {\r\n        //     const filePath = storagePath + fileName\r\n        //     console.log(\"Delete File\", fileName, storagePath)\r\n        //     window.Android.deleteFile(filePath)\r\n        // }\r\n\r\n        const parsed = parsedValue\r\n        console.log(\"DELETE LOG VALUE: \", JSON.stringify(value), filename)\r\n        const newFiles = {...files}\r\n\r\n        const loadedFiles = {...loadingFiles}\r\n        if (filename in loadedFiles) {\r\n            delete loadedFiles[filename]\r\n            setLoadingFiles(loadedFiles)\r\n        }\r\n\r\n        if (filename in newFiles) {\r\n            delete newFiles[filename]\r\n            setFiles(newFiles)\r\n        }\r\n\r\n        if (filename in parsed) {\r\n            console.log(\"DELETE LOG PARSED: \", JSON.stringify(parsed))\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            console.log(\"DELETE LOG AFTER: \", stringify)\r\n            setParsedValue(parsed)\r\n            await props.onChange(parsed)\r\n            _onBlur()\r\n        }\r\n\r\n        console.log(\"DELETE LOG newfiles\", JSON.stringify(newFiles))\r\n        console.log(\"DELETE LOG loading\", JSON.stringify(loadedFiles))\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", storagePath)\r\n            window.Android.previewFile(storagePath)\r\n        }\r\n    }\r\n\r\n    const _onBlur = () => props.onBlur(id, \"\");\r\n    const _onFocus = () => props.onFocus(id, \"\");\r\n\r\n    const ControlButtons = (props: { isFinished: boolean, name: string, path: string }) => {\r\n        const {isFinished, name, path} = props;\r\n\r\n        if (isFinished) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"text\" size=\"small\"\r\n                            onClick={() => removeFile(name, path)}\r\n                            onBlur={_onBlur}\r\n                            onFocus={_onFocus}>Remove</Button>\r\n                    <Button variant=\"text\" size=\"small\"\r\n                            onClick={() => previewFile(path)}\r\n                            onBlur={_onBlur}\r\n                            onFocus={_onFocus}>Preview</Button>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <Button variant=\"text\" size=\"small\"\r\n                        onClick={() => cancelWork(name)}\r\n                        onBlur={_onBlur}\r\n                        onFocus={_onFocus}>Cancel</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <Stack spacing={1} direction=\"row\">\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handlePhotoClick}\r\n                    size=\"small\"\r\n                    onBlur={_onBlur}\r\n                    onFocus={_onFocus}\r\n                >\r\n                    Photo\r\n                </CustomButton>\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handleVideoClick}\r\n                    size=\"small\"\r\n                    onBlur={_onBlur}\r\n                    onFocus={_onFocus}\r\n                >\r\n                    Video\r\n                </CustomButton>\r\n            </Stack>\r\n\r\n\r\n            {Object.keys(files).map((filename: any, i: number) => {\r\n                const progress = typeof files[filename].progress === \"string\" ? parseInt(files[filename].progress) : files[filename].progress;\r\n                const path = files[filename].storagePath\r\n                const isFinished = files[filename].isFinished\r\n                console.log(\"FILES: \", JSON.stringify(files))\r\n\r\n                return (\r\n                    <div key={`${filename}_${i}`} style={{paddingTop: 10}}>\r\n                        <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                            <Typography noWrap>{filename}</Typography>\r\n                            <ControlButtons name={filename} path={path} isFinished={isFinished}/>\r\n                        </Stack>\r\n                        {!isFinished && <LinearProgressWithLabel value={progress ?? 0}/>}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            toolbar={false}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import React, {useEffect, useState} from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport schemaJson from './schema.json'\r\nimport schemaUi from './ui.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomButton from './components/CustomButton'\r\nimport TextViewer from './components/text-editor/TextViewer';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\n// const evt = new Event('android_event', {'bubbles':true, 'cancelable':false});\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [previousTasks, setPreviousTasks] = useState<any>([])\r\n    const [richText, setRichText] = useState(\"\")\r\n    const [isComplete, setIsComplete] = useState(false)\r\n    const [allowChange, setAllowChange] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n                console.log(\"SCHEMA\", JSON.stringify(e.detail))\r\n                const stageData = JSON.parse(e.detail)\r\n                setSchema(stageData.jsonSchema)\r\n            console.log(\"ON CHANGE JSON\")\r\n                setUiSchema(stageData.uiSchema)\r\n            console.log(\"ON CHANGE UI\")\r\n                setIsComplete(stageData.isComplete)\r\n            console.log(\"ON CHANGE COMPLETE\")\r\n                setAllowChange(true)\r\n            console.log(\"ON CHANGE ALLOW\")\r\n            }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n                console.log(\"JS FORMDATA\", e.detail)\r\n                const d = JSON.parse(e.detail)\r\n                if (d && Object.keys(d).length > 0) {\r\n                    setData(d)\r\n                }\r\n\r\n            }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n                console.log(\"FILEDATA\", e.detail)\r\n                setFileData(JSON.parse(e.detail))\r\n            }\r\n        )\r\n        window.addEventListener('android_rich_text_event', (e: any) => {\r\n                console.log(\"RICH TEXT\", e.detail)\r\n                setRichText(e.detail.replace(\"{\\\"rich_text\\\":\", \"\").replace(\"\\\"\", \"\").replace(\"\\\"}\", \"\"))\r\n            }\r\n        )\r\n        window.addEventListener('android_previous_tasks_event', (e: any) => {\r\n                console.log(\"PREVIOUS TASKS\", JSON.stringify(e.detail))\r\n                setPreviousTasks(JSON.parse(e.detail))\r\n            }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_rich_text_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_previous_tasks_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (e, v) => {\r\n        console.log(\"ON CHANGE BEFORE IF\")\r\n        if (allowChange) {\r\n            setData(e.formData)\r\n            const stringData = JSON.stringify(e.formData)\r\n            console.log(\"ON CHANGE\", stringData)\r\n            window.Android.onChange(stringData);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    const renderPreviousTasks = () => {\r\n        return previousTasks.map((task: { jsonSchema: string, uiSchema: string, responses: any }, i: number) => {\r\n            const parsedJson = task.jsonSchema\r\n            const parsedUi = task.uiSchema\r\n            const parsedResponses = task.responses\r\n            console.log(\"Prev Task\", task)\r\n\r\n            return (\r\n                <Form key={i}\r\n                      schema={parsedJson as any}\r\n                      uiSchema={parsedUi as any}\r\n                      formData={parsedResponses}\r\n                      widgets={widgets}\r\n                      disabled={true}\r\n                > </Form>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderTextViewer = () => {\r\n        console.log(\"TEXT VIEWER\", richText)\r\n        return <TextViewer data={richText}/>\r\n    }\r\n    console.log(\"FORM DATA\", data)\r\n    return (\r\n        <div style={{padding: 4}}>\r\n            {richText && renderTextViewer()}\r\n            {renderPreviousTasks()}\r\n            <Form schema={schema as any}\r\n                  uiSchema={uiSchema}\r\n                  formData={data}\r\n                  widgets={widgets}\r\n                  disabled={isComplete}\r\n                  formContext={fileData}\r\n                  onChange={handleChange}\r\n                  onSubmit={handleSubmit}\r\n            >\r\n                <CustomButton type={\"submit\"} disabled={isComplete}>Submit</CustomButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}