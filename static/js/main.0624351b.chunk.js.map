{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/CustomButton.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/text-editor/TextViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomButton","styled","Button","theme","palette","getContrastText","green","backgroundColor","window","Android","CustomFileWidget","schema","uiSchema","id","formContext","disabled","onChange","privateUpload","private","parsedId","replace","useState","files","setFiles","loadingFiles","setLoadingFiles","console","log","JSON","stringify","useEffect","hasOwnProperty","filesData","Object","keys","forEach","filename","path","prevState","storagePath","isFinished","length","finishedUpload","workTag","allFiles","ControlButtons","name","size","onClick","fileName","filePath","deleteFile","removeFile","previewFile","cancelWork","className","title","Stack","spacing","direction","pickPhotos","pickVideos","map","i","progress","parseInt","style","paddingTop","noWrap","TextViewer","data","toolbar","inline","tinymceScriptSrc","process","init","plugins","menubar","image_advtab","importcss_append","App","setSchema","setUiSchema","setData","fileData","setFileData","previousTasks","setPreviousTasks","richText","setRichText","isComplete","setIsComplete","widgets","customfile","addEventListener","e","detail","stageData","parse","jsonSchema","listenersReady","removeEventListener","padding","task","parsedJson","parsedUi","parsedResponses","responses","formData","stringData","onSubmit","onFormSubmit","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0624351b.chunk.js","sourcesContent":["import LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import { styled } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { green } from '@mui/material/colors';\r\n\r\nconst CustomButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(green[300]),\r\n    backgroundColor: green[300],\r\n    '&:hover': {\r\n      backgroundColor: green[400],\r\n    }\r\n  }));\r\n\r\n\r\nexport default CustomButton","import React, { useEffect, useState } from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport { Typography, Button, Stack } from \"@mui/material\";\r\nimport CustomButton from '../../CustomButton'\r\n\r\n\r\ntype fileParams = { fileName: string, progress: number, downloadUri?: string, storagePath?: string }\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const { schema, uiSchema, id, formContext, disabled, onChange, value } = props;\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n    const parsedId = id.replace('root_', '');\r\n    const [files, setFiles] = useState<any>({})\r\n    const [loadingFiles, setLoadingFiles] = useState<any>({})\r\n\r\n    console.log(\"FORM PROPS\", JSON.stringify(props))\r\n    console.log(\"VALUE\", value)\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            console.log(\"formContext\", JSON.stringify(formContext))\r\n            if (formContext.hasOwnProperty(parsedId)) {\r\n                let filesData = formContext[parsedId]\r\n                console.log(\"filesData\", JSON.stringify(filesData))\r\n\r\n                setFiles(filesData)\r\n                setLoadingFiles(filesData)\r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            console.log(\"value useEffect\", value)\r\n            Object.keys(value).forEach(filename => {\r\n                const path = value[filename]\r\n                setFiles((prevState: any) => ({\r\n                    ...prevState,\r\n                    [filename]: { storagePath: path, isFinished: true }\r\n                }))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n\r\n    // Return value to Form\r\n    useEffect(() => {\r\n        if (Object.keys(loadingFiles).length > 0) {\r\n            const finishedUpload: any = {}\r\n            Object.keys(loadingFiles).forEach(filename => {\r\n                if (loadingFiles[filename].isFinished && loadingFiles[filename].workTag === \"TAG_UPLOAD\") {\r\n                    finishedUpload[filename] = loadingFiles[filename].storagePath\r\n                }\r\n            })\r\n            console.log(\"VALUE loading\", value)\r\n            let stringify = \"\"\r\n            const allFiles = { ...value, ...finishedUpload };\r\n            stringify = JSON.stringify(allFiles)\r\n            console.log(\"VALUE STRING\", stringify)\r\n            onChange(allFiles)\r\n        }\r\n    }, [loadingFiles])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"PARSED ID\", parsedId)\r\n            window.Android.pickVideos(parsedId, privateUpload);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(parsedId, privateUpload);\r\n        }\r\n    };\r\n\r\n    const removeFile = (fileName: string, storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            const filePath = storagePath + fileName\r\n            console.log(\"Delete File\", fileName, storagePath)\r\n            window.Android.deleteFile(filePath)\r\n        }\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", storagePath)\r\n            window.Android.previewFile(storagePath)\r\n        }\r\n    }\r\n\r\n    const ControlButtons = (props: { isFinished: boolean, name: string, path: string }) => {\r\n        const { isFinished, name, path } = props;\r\n\r\n        if (isFinished) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"text\" size=\"small\" onClick={() => removeFile(name, path)}>Remove</Button>\r\n                    <Button variant=\"text\" size=\"small\" onClick={() => previewFile(path)}>Preview</Button>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Button variant=\"text\" size=\"small\" onClick={() => cancelWork(name)}>Cancel</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br />\r\n            <Stack spacing={1} direction=\"row\">\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handlePhotoClick}\r\n                    size=\"small\"\r\n                >\r\n                    Photo\r\n                </CustomButton>\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handleVideoClick}\r\n                    size=\"small\"\r\n                >\r\n                    Video\r\n                </CustomButton>\r\n            </Stack>\r\n\r\n\r\n            {Object.keys(files).map((filename: any, i: number) => {\r\n                const progress = typeof files[filename].progress === \"string\" ? parseInt(files[filename].progress) : files[filename].progress;\r\n                const path = files[filename].storagePath\r\n                const isFinished = files[filename].isFinished\r\n\r\n                return (\r\n                    <div key={`${filename}_${i}`} style={{ paddingTop: 10 }}>\r\n                        <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                            <Typography noWrap >{filename}</Typography>\r\n                            <ControlButtons name={filename} path={path} isFinished={isFinished} />\r\n                        </Stack>\r\n                        {!isFinished && <LinearProgressWithLabel value={progress ?? 0} />}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            toolbar={false}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import React, { useEffect, useState } from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport schemaJson from './schema.json'\r\nimport schemaUi from './ui.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomButton from './components/CustomButton'\r\nimport TextViewer from './components/text-editor/TextViewer';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\n// const evt = new Event('android_event', {'bubbles':true, 'cancelable':false});\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [previousTasks, setPreviousTasks] = useState<any>([])\r\n    const [richText, setRichText] = useState(\"\")\r\n    const [isComplete, setIsComplete] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n            console.log(\"SCHEMA\", JSON.stringify(e.detail))\r\n            const stageData = JSON.parse(e.detail)\r\n            setSchema(stageData.jsonSchema)\r\n            setUiSchema(stageData.uiSchema)\r\n            setIsComplete(stageData.isComplete)\r\n        }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n            console.log(\"JS FORMDATA\", e.detail)\r\n            setData(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n            console.log(\"FILEDATA\", e.detail)\r\n            setFileData(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.addEventListener('android_rich_text_event', (e: any) => {\r\n            console.log(\"RICH TEXT\", e.detail)\r\n            setRichText(e.detail.replace(\"{\\\"rich_text\\\":\", \"\").replace(\"\\\"\", \"\").replace(\"\\\"}\", \"\"))\r\n        }\r\n        )\r\n        window.addEventListener('android_previous_tasks_event', (e: any) => {\r\n            console.log(\"PREVIOUS TASKS\", JSON.stringify(e.detail))\r\n            setPreviousTasks(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_rich_text_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_previous_tasks_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (e) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        console.log(\"ON CHANGE\", stringData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onChange(stringData);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    const renderPreviousTasks = () => {\r\n        return previousTasks.map((task: { jsonSchema: string, uiSchema: string, responses: any }, i: number) => {\r\n            const parsedJson = task.jsonSchema\r\n            const parsedUi = task.uiSchema\r\n            const parsedResponses = task.responses\r\n            console.log(\"Prev Task\", task)\r\n\r\n            return (\r\n                <Form key={i} \r\n                    schema={parsedJson as any}\r\n                    uiSchema={parsedUi as any}\r\n                    formData={parsedResponses}\r\n                    widgets={widgets}\r\n                    disabled={true}\r\n                >  </Form>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderTextViewer = () => {\r\n        console.log(\"TEXT VIEWER\", richText)\r\n        return <TextViewer data={richText} />\r\n    }\r\n    console.log(\"FORM DATA\", data)\r\n    return (\r\n        <div style={{ padding: 4 }}>\r\n            {richText && renderTextViewer()}\r\n            {renderPreviousTasks()}\r\n            <Form schema={schema as any}\r\n                uiSchema={uiSchema}\r\n                formData={data}\r\n                widgets={widgets}\r\n                disabled={isComplete}\r\n                formContext={fileData}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <CustomButton type={\"submit\"} disabled={isComplete}>Submit</CustomButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}