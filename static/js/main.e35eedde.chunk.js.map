{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/CustomButton.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/text-editor/TextViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomButton","styled","Button","theme","palette","getContrastText","green","backgroundColor","window","Android","CustomFileWidget","schema","uiSchema","id","formContext","disabled","onChange","privateUpload","private","parsedId","replace","useState","files","setFiles","parsedValue","setParsedValue","useEffect","hasOwnProperty","filesData","prevState","uploaded","Object","keys","forEach","filename","isFinished","storagePath","length","parsed","JSON","parse","allFiles","stringify","console","log","f","path","removeFile","a","newFiles","_onBlur","onBlur","_onFocus","onFocus","ControlButtons","name","size","onClick","previewFile","fileName","cancelWork","className","title","Stack","spacing","direction","pickPhotos","pickVideos","map","i","progress","parseInt","workTag","style","paddingTop","noWrap","TextViewer","data","inline","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","App","setSchema","setUiSchema","setData","fileData","setFileData","previousTasks","setPreviousTasks","richText","setRichText","isComplete","setIsComplete","allowChange","setAllowChange","widgets","customfile","addEventListener","e","stageData","detail","jsonSchema","rich_text","listenersReady","removeEventListener","padding","task","parsedJson","parsedUi","parsedResponses","responses","formData","v","stringData","onSubmit","onFormSubmit","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e35eedde.chunk.js","sourcesContent":["import LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import { styled } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { green } from '@mui/material/colors';\r\n\r\nconst CustomButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(green[300]),\r\n    backgroundColor: green[300],\r\n    '&:hover': {\r\n      backgroundColor: green[400],\r\n    }\r\n  }));\r\n\r\n\r\nexport default CustomButton","import React, {useEffect, useState} from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport {Typography, Button, Stack} from \"@mui/material\";\r\nimport CustomButton from '../../CustomButton'\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, id, formContext, disabled, onChange, value} = props;\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n    const parsedId = id.replace('root_', '');\r\n    const [files, setFiles] = useState<any>({})\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            if (formContext.hasOwnProperty(parsedId)) {\r\n                const filesData = formContext[parsedId]\r\n\r\n                setFiles((prevState: any) => ({...prevState,...filesData}))\r\n\r\n                const uploaded: any = {}\r\n                Object.keys(filesData).forEach(filename => {\r\n                    if (filesData[filename].isFinished) {\r\n                        uploaded[filename] = filesData[filename].storagePath\r\n                    }\r\n                })\r\n                if (Object.keys(uploaded).length > 0) {\r\n                    const parsed = value && typeof value === \"string\" ? JSON.parse(value) : {}\r\n                    const allFiles = JSON.stringify({...parsed, ...uploaded})\r\n                    props.onChange(allFiles)\r\n                }\r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            console.log(\"value useEffect\", value)\r\n            const parsed: any = value && typeof value === \"string\" ? JSON.parse(value) : {}\r\n            setParsedValue(parsed)\r\n            let f:any = {}\r\n            Object.keys(parsed).forEach(filename => {\r\n                const path = parsed[filename]\r\n                f[filename] = {storagePath: path, isFinished: true}\r\n            })\r\n            setFiles(f)\r\n        }\r\n    }, [value])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickVideos(parsedId, privateUpload);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(parsedId, privateUpload);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (filename: string) => {\r\n        const parsed = parsedValue\r\n        const newFiles = {...files}\r\n\r\n        if (filename in newFiles) {\r\n            delete newFiles[filename]\r\n            setFiles(newFiles)\r\n        }\r\n\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            setParsedValue(parsed)\r\n            await props.onChange(JSON.stringify(parsed))\r\n            _onBlur()\r\n        }\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", storagePath)\r\n            window.Android.previewFile(storagePath)\r\n        }\r\n    }\r\n\r\n    const _onBlur = () => props.onBlur(id, \"\");\r\n    const _onFocus = () => props.onFocus(id, \"\");\r\n\r\n    const ControlButtons = (props: { isFinished: boolean, name: string, path: string }) => {\r\n        const {isFinished, name, path} = props;\r\n\r\n        if (isFinished) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"text\" size=\"small\"\r\n                            onClick={() => removeFile(name)}\r\n                            onBlur={_onBlur}\r\n                            onFocus={_onFocus}>Удалить</Button>\r\n                    <Button variant=\"text\" size=\"small\"\r\n                            onClick={() => previewFile(path)}\r\n                            onBlur={_onBlur}\r\n                            onFocus={_onFocus}>Посмотреть файл</Button>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <Button variant=\"text\" size=\"small\"\r\n                        onClick={() => cancelWork(name)}\r\n                        onBlur={_onBlur}\r\n                        onFocus={_onFocus}>Отменить загрузку</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <Stack spacing={1} direction=\"row\">\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handlePhotoClick}\r\n                    size=\"small\"\r\n                    onBlur={_onBlur}\r\n                    onFocus={_onFocus}\r\n                >\r\n                    Фото\r\n                </CustomButton>\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handleVideoClick}\r\n                    size=\"small\"\r\n                    onBlur={_onBlur}\r\n                    onFocus={_onFocus}\r\n                >\r\n                    Видео\r\n                </CustomButton>\r\n            </Stack>\r\n\r\n\r\n            {Object.keys(files).map((filename: any, i: number) => {\r\n                const progress = typeof files[filename].progress === \"string\" ? parseInt(files[filename].progress) : files[filename].progress;\r\n                const path = files[filename].storagePath\r\n                const isFinished = files[filename].isFinished\r\n                const workTag : \"TAG_COMPRESS\" | \"TAG_UPLOAD\" = files[filename].workTag ?? \"TAG_UPLOAD\"\r\n\r\n                return (\r\n                    <div key={`${filename}_${i}`} style={{paddingTop: 10}}>\r\n                        <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                            <Typography noWrap>{filename}</Typography>\r\n                            <ControlButtons name={filename} path={path} isFinished={isFinished}/>\r\n                        </Stack>\r\n                        {!isFinished && <div>\r\n                            <Typography>{workTag === \"TAG_COMPRESS\" ? \"Сжатие файла\" : \"Загрузка файла\"}</Typography>\r\n                            <LinearProgressWithLabel value={progress ?? 0}/>\r\n                        </div>}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import React, {useEffect, useState} from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomButton from './components/CustomButton'\r\nimport TextViewer from './components/text-editor/TextViewer';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [previousTasks, setPreviousTasks] = useState<any>([])\r\n    const [richText, setRichText] = useState(\"\")\r\n    const [isComplete, setIsComplete] = useState(false)\r\n    const [allowChange, setAllowChange] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n                const stageData = e.detail\r\n                setSchema(stageData.jsonSchema)\r\n                setUiSchema(stageData.uiSchema)\r\n                setIsComplete(stageData.isComplete)\r\n                setAllowChange(true)\r\n            }\r\n        )\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n                console.log(\"JS FORMDATA\", JSON.stringify(e.detail))\r\n                setData(e.detail)\r\n            }\r\n        )\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n                console.log(\"FILEDATA\", e.detail)\r\n                setFileData(e.detail)\r\n            }\r\n        )\r\n        window.addEventListener('android_rich_text_event', (e: any) => {\r\n                console.log(\"RICH TEXT\", JSON.stringify(e.detail))\r\n                setRichText(e.detail.rich_text)\r\n            }\r\n        )\r\n        window.addEventListener('android_previous_tasks_event', (e: any) => {\r\n                console.log(\"PREVIOUS TASKS\", JSON.stringify(e.detail))\r\n                setPreviousTasks(e.detail)\r\n            }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_rich_text_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_previous_tasks_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (e, v) => {\r\n        if (allowChange) {\r\n            setData(e.formData)\r\n            const stringData = JSON.stringify(e.formData)\r\n            console.log(\"ON CHANGE\", stringData)\r\n            window.Android.onChange(stringData);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        const stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    const renderPreviousTasks = () => {\r\n        return previousTasks.map((task: { jsonSchema: string, uiSchema: string, responses: any }, i: number) => {\r\n            const parsedJson = task.jsonSchema\r\n            const parsedUi = task.uiSchema\r\n            const parsedResponses = task.responses\r\n\r\n            return (\r\n                <Form key={i}\r\n                      schema={parsedJson as any}\r\n                      uiSchema={parsedUi as any}\r\n                      formData={parsedResponses}\r\n                      widgets={widgets}\r\n                      disabled={true}\r\n                > </Form>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderTextViewer = () => {\r\n        if (richText) {\r\n            return <TextViewer data={richText}/>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: 4}}>\r\n            {renderTextViewer()}\r\n            {renderPreviousTasks()}\r\n            <Form schema={schema as any}\r\n                  uiSchema={uiSchema}\r\n                  formData={data}\r\n                  widgets={widgets}\r\n                  disabled={isComplete}\r\n                  formContext={fileData}\r\n                  onChange={handleChange}\r\n                  onSubmit={handleSubmit}\r\n            >\r\n                <CustomButton type={\"submit\"} disabled={isComplete}>Submit</CustomButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}