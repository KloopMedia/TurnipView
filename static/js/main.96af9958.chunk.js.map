{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/CustomButton.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomButton","styled","Button","theme","palette","getContrastText","green","backgroundColor","window","Android","CustomFileWidget","schema","uiSchema","id","formContext","disabled","privateUpload","private","useState","files","setFiles","useEffect","console","log","JSON","stringify","hasOwnProperty","filesData","parsed","parse","newFiles","Object","keys","map","filename","fileName","downloadUri","url","storagePath","progress","length","filesObj","forEach","file","onChange","ControlButtons","name","path","size","onClick","cancelWork","filePath","deleteFile","removeFile","previewFile","className","title","Stack","spacing","direction","pickPhotos","pickVideos","i","parseInt","style","paddingTop","noWrap","App","setSchema","setUiSchema","data","setData","fileData","setFileData","previousTasks","setPreviousTasks","setRichText","isComplete","setIsComplete","widgets","customfile","addEventListener","e","detail","stageData","jsonSchema","listenersReady","removeEventListener","handleChange","formData","stringData","handleSubmit","onFormSubmit","padding","task","parsedJson","parsedUi","parsedResponses","responses","onSubmit","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96af9958.chunk.js","sourcesContent":["import LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import { styled } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { green } from '@mui/material/colors';\r\n\r\nconst CustomButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(green[300]),\r\n    backgroundColor: green[300],\r\n    '&:hover': {\r\n      backgroundColor: green[400],\r\n    }\r\n  }));\r\n\r\n\r\nexport default CustomButton","import React, { useEffect, useState } from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport { Typography, Button, Stack } from \"@mui/material\";\r\nimport CustomButton from '../../CustomButton'\r\n\r\n\r\ntype fileParams = { fileName: string, progress: number, downloadUri?: string, storagePath?: string }\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const { schema, uiSchema, id, formContext, disabled, value } = props;\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n    const [files, setFiles] = useState<fileParams[] | undefined>()\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            console.log(\"formContext\", JSON.stringify(formContext))\r\n            if (formContext.hasOwnProperty(id)) {\r\n                console.log(\"SAME ID\")\r\n                let filesData = formContext[id]\r\n                console.log(\"filesData\", JSON.stringify(filesData))\r\n                setFiles(filesData)\r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        console.log(\"value\", value)\r\n        if (value) {\r\n            let parsed = JSON.parse(value)\r\n            let newFiles = Object.keys(parsed).map(filename => {\r\n                return { fileName: filename, downloadUri: parsed[filename].url, storagePath: parsed[filename].storagePath, progress: 100 }\r\n            })\r\n            setFiles(newFiles)\r\n        }\r\n    }, [value])\r\n\r\n\r\n    // Return value to Form\r\n    useEffect(() => {\r\n        if (files && files?.length > 0) {\r\n            let filesObj: any = {}\r\n            files.forEach(file => {\r\n                if (file.downloadUri) {\r\n                    filesObj[file.fileName] = { url: file.downloadUri, storagePath: file.storagePath }\r\n                }\r\n                else {\r\n                    filesObj[file.fileName] = { url: \"\", storagePath: \"\" }\r\n                }\r\n            })\r\n            let stringify = JSON.stringify(filesObj)\r\n            props.onChange(stringify)\r\n        }\r\n    }, [files])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickVideos(id, privateUpload);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(id, privateUpload);\r\n        }\r\n    };\r\n\r\n    const removeFile = (fileName: string, storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            const filePath = storagePath + fileName\r\n            console.log(\"Delete File\", fileName, storagePath)\r\n            window.Android.deleteFile(filePath)\r\n        }\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (url: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", url)\r\n            window.Android.previewFile(url)\r\n        }\r\n    }\r\n\r\n    const ControlButtons = (props: {progress: number, url: string, name: string, path: string}) => {\r\n        const { progress, name, url, path } = props;\r\n\r\n        if (progress < 100) {\r\n            return (\r\n                <Button variant=\"text\" size=\"small\" onClick={() => cancelWork(name)}>Cancel</Button>\r\n            )\r\n        }\r\n        if (progress === 100) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"text\" size=\"small\" onClick={() => removeFile(name, path)}>Remove</Button>\r\n                    <Button variant=\"text\" size=\"small\" onClick={() => previewFile(url)}>Preview</Button>\r\n                </>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br />\r\n            <Stack spacing={1} direction=\"row\">\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handlePhotoClick}\r\n                    size=\"small\"\r\n                >\r\n                    Photo\r\n                </CustomButton>\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handleVideoClick}\r\n                    size=\"small\"\r\n                >\r\n                    Video\r\n                </CustomButton>\r\n            </Stack>\r\n\r\n\r\n\r\n            {files && files.map((file: any, i: number) => {\r\n                if (file) {\r\n                    const progress = typeof file.progress === \"string\" ? parseInt(file.progress) : file.progress;\r\n                    const name = file.fileName;\r\n                    const path = file.storagePath ?? \"\";\r\n                    const url = file.downloadUri ?? \"\";\r\n\r\n                    return (\r\n                        <div key={`${name}_${i}`} style={{ paddingTop: 10 }}>\r\n                            <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                                <Typography noWrap >{name}</Typography>\r\n                                <ControlButtons name={name} url={url} path={path}  progress={progress} />\r\n                                {/* {file.progress == 100 && <a className=\"text-success\" href={file.downloadUri} style={{paddingLeft: 10}}>File Saved</a>} */}\r\n                            </Stack>\r\n                            {progress < 100 && <LinearProgressWithLabel value={progress ?? 0} />}\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return null\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import React, { useEffect, useState } from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport schemaJson from './schema.json'\r\nimport schemaUi from './ui.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomButton from './components/CustomButton'\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\n// const evt = new Event('android_event', {'bubbles':true, 'cancelable':false});\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [previousTasks, setPreviousTasks] = useState([])\r\n    const [richText, setRichText] = useState(\"\")\r\n    const [isComplete, setIsComplete] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n            console.log(JSON.stringify(e.detail))\r\n            const stageData = JSON.parse(e.detail)\r\n            setSchema(stageData.jsonSchema)\r\n            setUiSchema(stageData.uiSchema)\r\n            setIsComplete(stageData.isComplete)\r\n        }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n            console.log(\"JS FORMDATA\", JSON.stringify(e.detail))\r\n            setData(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n            console.log(\"FILEDATA\", JSON.stringify(e.detail))\r\n            setFileData(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.addEventListener('android_rich_text_event', (e: any) => {\r\n            console.log(\"RICH TEXT\", JSON.stringify(e.detail))\r\n            setRichText(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.addEventListener('android_previous_tasks_event', (e: any) => {\r\n            console.log(\"PREVIOUS TASKS\", JSON.stringify(e.detail))\r\n            setPreviousTasks(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_rich_text_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_previous_tasks_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (e) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onChange(stringData);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    const renderPreviousTasks = () => {\r\n        return previousTasks.map((task: { jsonSchema: string, uiSchema: string, responses: any }) => {\r\n            const parsedJson = JSON.parse(task.jsonSchema)\r\n            const parsedUi = JSON.parse(task.uiSchema)\r\n            const parsedResponses = JSON.parse(task.responses)\r\n\r\n            return (\r\n                <Form schema={parsedJson as any}\r\n                    uiSchema={parsedUi}\r\n                    formData={parsedResponses}\r\n                    widgets={widgets}\r\n                    disabled={true}\r\n                    formContext={fileData}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >  </Form>\r\n            )\r\n        }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: 4 }}>\r\n            {renderPreviousTasks()}\r\n            <Form schema={schema as any}\r\n                uiSchema={uiSchema}\r\n                formData={data}\r\n                widgets={widgets}\r\n                disabled={isComplete}\r\n                formContext={fileData}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <CustomButton type={\"submit\"} disabled={isComplete}>Submit</CustomButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}