{"version":3,"sources":["components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/CustomButton.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/text-editor/TextViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomButton","styled","Button","theme","palette","getContrastText","green","backgroundColor","window","Android","CustomFileWidget","schema","uiSchema","id","formContext","disabled","onChange","privateUpload","private","parsedId","replace","useState","files","setFiles","loadingFiles","setLoadingFiles","parsedValue","setParsedValue","console","log","JSON","stringify","useEffect","hasOwnProperty","filesData","Object","keys","forEach","filename","path","prevState","storagePath","isFinished","length","finishedUpload","workTag","allFiles","removeFile","parsed","newFiles","loadedFiles","ControlButtons","name","size","onClick","previewFile","fileName","cancelWork","className","title","Stack","spacing","direction","pickPhotos","pickVideos","map","i","progress","parseInt","style","paddingTop","noWrap","TextViewer","data","toolbar","inline","tinymceScriptSrc","process","init","plugins","menubar","image_advtab","importcss_append","App","setSchema","setUiSchema","setData","fileData","setFileData","previousTasks","setPreviousTasks","richText","setRichText","isComplete","setIsComplete","widgets","customfile","addEventListener","e","detail","stageData","parse","jsonSchema","listenersReady","removeEventListener","padding","task","parsedJson","parsedUi","parsedResponses","responses","formData","stringData","onSubmit","onFormSubmit","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aff785d.chunk.js","sourcesContent":["import LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import { styled } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { green } from '@mui/material/colors';\r\n\r\nconst CustomButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(green[300]),\r\n    backgroundColor: green[300],\r\n    '&:hover': {\r\n      backgroundColor: green[400],\r\n    }\r\n  }));\r\n\r\n\r\nexport default CustomButton","import React, {useEffect, useState} from 'react'\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport {Typography, Button, Stack} from \"@mui/material\";\r\nimport CustomButton from '../../CustomButton'\r\n\r\n\r\ntype fileParams = { fileName: string, progress: number, downloadUri?: string, storagePath?: string }\r\n\r\nwindow.Android = window.Android || {};\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, id, formContext, disabled, onChange, value} = props;\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n    const parsedId = id.replace('root_', '');\r\n    const [files, setFiles] = useState<any>({})\r\n    const [loadingFiles, setLoadingFiles] = useState<any>({})\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    console.log(\"FORM PROPS\", JSON.stringify(props))\r\n    console.log(\"VALUE\", JSON.stringify(value))\r\n\r\n    useEffect(() => {\r\n        if (formContext) {\r\n            console.log(\"formContext\", JSON.stringify(formContext))\r\n            if (formContext.hasOwnProperty(parsedId)) {\r\n                let filesData = formContext[parsedId]\r\n                console.log(\"filesData\", JSON.stringify(filesData))\r\n\r\n                setFiles(filesData)\r\n                setLoadingFiles(filesData)\r\n            }\r\n        }\r\n    }, [id, formContext])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            console.log(\"value useEffect\", value)\r\n            setParsedValue(value)\r\n            Object.keys(value).forEach(filename => {\r\n                const path = value[filename]\r\n                setFiles((prevState: any) => ({\r\n                    ...prevState,\r\n                    [filename]: {storagePath: path, isFinished: true}\r\n                }))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n\r\n    // Return value to Form\r\n    useEffect(() => {\r\n        if (Object.keys(loadingFiles).length > 0) {\r\n            console.log(\"Loading Files: \", loadingFiles)\r\n            const finishedUpload: any = {}\r\n            Object.keys(loadingFiles).forEach(filename => {\r\n                if (loadingFiles[filename].isFinished && loadingFiles[filename].workTag === \"TAG_UPLOAD\") {\r\n                    finishedUpload[filename] = loadingFiles[filename].storagePath\r\n                }\r\n            })\r\n            const allFiles = {...value, ...finishedUpload};\r\n            const stringify = JSON.stringify(allFiles)\r\n            console.log(\"VALUE STRING\", stringify)\r\n            onChange(allFiles)\r\n        }\r\n    }, [loadingFiles])\r\n\r\n    const handleVideoClick = () => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"PARSED ID\", parsedId)\r\n            window.Android.pickVideos(parsedId, privateUpload);\r\n        }\r\n    }\r\n\r\n    const handlePhotoClick = () => {\r\n        if (\"Android\" in window) {\r\n            window.Android.pickPhotos(parsedId, privateUpload);\r\n        }\r\n    };\r\n\r\n    const removeFile = (filename: string, storagePath: string) => {\r\n        // if (\"Android\" in window) {\r\n        //     const filePath = storagePath + fileName\r\n        //     console.log(\"Delete File\", fileName, storagePath)\r\n        //     window.Android.deleteFile(filePath)\r\n        // }\r\n\r\n        const parsed = parsedValue\r\n        console.log(\"DELETE LOG VALUE: \", JSON.stringify(value), filename)\r\n        const newFiles = {...files}\r\n\r\n        const loadedFiles = {...loadingFiles}\r\n        if (filename in loadedFiles) {\r\n            delete loadedFiles[filename]\r\n            setLoadingFiles(loadedFiles)\r\n        }\r\n\r\n        if (filename in newFiles) {\r\n            delete newFiles[filename]\r\n            setFiles(newFiles)\r\n        }\r\n\r\n        if (filename in parsed) {\r\n            console.log(\"DELETE LOG PARSED: \", JSON.stringify(parsed))\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            console.log(\"DELETE LOG AFTER: \", stringify)\r\n            setParsedValue(parsed)\r\n            props.onChange(parsed)\r\n        }\r\n\r\n        console.log(\"DELETE LOG newfiles\", JSON.stringify(newFiles))\r\n        console.log(\"DELETE LOG loading\", JSON.stringify(loadedFiles))\r\n    }\r\n\r\n    const cancelWork = (fileName: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Cancel File\", fileName)\r\n            window.Android.cancelWork(fileName)\r\n        }\r\n    }\r\n\r\n    const previewFile = (storagePath: string) => {\r\n        if (\"Android\" in window) {\r\n            console.log(\"Preview File\", storagePath)\r\n            window.Android.previewFile(storagePath)\r\n        }\r\n    }\r\n\r\n    const ControlButtons = (props: { isFinished: boolean, name: string, path: string }) => {\r\n        const {isFinished, name, path} = props;\r\n\r\n        if (isFinished) {\r\n            return (\r\n                <>\r\n                    <Button variant=\"text\" size=\"small\" onClick={() => removeFile(name, path)}>Remove</Button>\r\n                    <Button variant=\"text\" size=\"small\" onClick={() => previewFile(path)}>Preview</Button>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <Button variant=\"text\" size=\"small\" onClick={() => cancelWork(name)}>Cancel</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <Stack spacing={1} direction=\"row\">\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handlePhotoClick}\r\n                    size=\"small\"\r\n                >\r\n                    Photo\r\n                </CustomButton>\r\n                <CustomButton\r\n                    disabled={disabled}\r\n                    onClick={handleVideoClick}\r\n                    size=\"small\"\r\n                >\r\n                    Video\r\n                </CustomButton>\r\n            </Stack>\r\n\r\n\r\n            {Object.keys(files).map((filename: any, i: number) => {\r\n                const progress = typeof files[filename].progress === \"string\" ? parseInt(files[filename].progress) : files[filename].progress;\r\n                const path = files[filename].storagePath\r\n                const isFinished = files[filename].isFinished\r\n                console.log(\"FILES: \", JSON.stringify(files))\r\n\r\n                return (\r\n                    <div key={`${filename}_${i}`} style={{paddingTop: 10}}>\r\n                        <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                            <Typography noWrap>{filename}</Typography>\r\n                            <ControlButtons name={filename} path={path} isFinished={isFinished}/>\r\n                        </Stack>\r\n                        {!isFinished && <LinearProgressWithLabel value={progress ?? 0}/>}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            toolbar={false}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import React, { useEffect, useState } from 'react';\r\nimport Form from '@rjsf/bootstrap-4'\r\nimport CustomFileWidget from \"./components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport './App.css';\r\nimport schemaJson from './schema.json'\r\nimport schemaUi from './ui.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomButton from './components/CustomButton'\r\nimport TextViewer from './components/text-editor/TextViewer';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Android: any;\r\n    }\r\n}\r\nwindow.Android = window.Android || {};\r\n\r\n// const evt = new Event('android_event', {'bubbles':true, 'cancelable':false});\r\n\r\nfunction App() {\r\n    const [schema, setSchema] = useState({});\r\n    const [uiSchema, setUiSchema] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [fileData, setFileData] = useState({})\r\n    const [previousTasks, setPreviousTasks] = useState<any>([])\r\n    const [richText, setRichText] = useState(\"\")\r\n    const [isComplete, setIsComplete] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        window.addEventListener('android_schema_event', (e: any) => {\r\n            console.log(\"SCHEMA\", JSON.stringify(e.detail))\r\n            const stageData = JSON.parse(e.detail)\r\n            setSchema(stageData.jsonSchema)\r\n            setUiSchema(stageData.uiSchema)\r\n            setIsComplete(stageData.isComplete)\r\n        }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_data_event', (e: any) => {\r\n            console.log(\"JS FORMDATA\", e.detail)\r\n            setData(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        // @ts-ignore\r\n        window.addEventListener('android_file_event', (e: any) => {\r\n            console.log(\"FILEDATA\", e.detail)\r\n            setFileData(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.addEventListener('android_rich_text_event', (e: any) => {\r\n            console.log(\"RICH TEXT\", e.detail)\r\n            setRichText(e.detail.replace(\"{\\\"rich_text\\\":\", \"\").replace(\"\\\"\", \"\").replace(\"\\\"}\", \"\"))\r\n        }\r\n        )\r\n        window.addEventListener('android_previous_tasks_event', (e: any) => {\r\n            console.log(\"PREVIOUS TASKS\", JSON.stringify(e.detail))\r\n            setPreviousTasks(JSON.parse(e.detail))\r\n        }\r\n        )\r\n        window.Android.listenersReady();\r\n        return () => {\r\n            // @ts-ignore\r\n            window.removeEventListener('android_json_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_ui_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_data_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_file_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_rich_text_event', e => console.log(\"Event inside webview\", e.detail));\r\n            // @ts-ignore\r\n            window.removeEventListener('android_previous_tasks_event', e => console.log(\"Event inside webview\", e.detail));\r\n        };\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    const handleChange = (e) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        console.log(\"ON CHANGE\", stringData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onChange(stringData);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        setData(e.formData)\r\n        let stringData = JSON.stringify(e.formData)\r\n        if (\"Android\" in window) {\r\n            window.Android.onFormSubmit(stringData);\r\n        }\r\n    }\r\n\r\n    const renderPreviousTasks = () => {\r\n        return previousTasks.map((task: { jsonSchema: string, uiSchema: string, responses: any }, i: number) => {\r\n            const parsedJson = task.jsonSchema\r\n            const parsedUi = task.uiSchema\r\n            const parsedResponses = task.responses\r\n            console.log(\"Prev Task\", task)\r\n\r\n            return (\r\n                <Form key={i} \r\n                    schema={parsedJson as any}\r\n                    uiSchema={parsedUi as any}\r\n                    formData={parsedResponses}\r\n                    widgets={widgets}\r\n                    disabled={true}\r\n                >  </Form>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderTextViewer = () => {\r\n        console.log(\"TEXT VIEWER\", richText)\r\n        return <TextViewer data={richText} />\r\n    }\r\n    console.log(\"FORM DATA\", data)\r\n    return (\r\n        <div style={{ padding: 4 }}>\r\n            {richText && renderTextViewer()}\r\n            {renderPreviousTasks()}\r\n            <Form schema={schema as any}\r\n                uiSchema={uiSchema}\r\n                formData={data}\r\n                widgets={widgets}\r\n                disabled={isComplete}\r\n                formContext={fileData}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <CustomButton type={\"submit\"} disabled={isComplete}>Submit</CustomButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}